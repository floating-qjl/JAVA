

常见数据结构：
        数据结构是计算机底层存储、组织数据的方式。是指数据相互之间是以什么方式排列在一起的。
        通常情况下，精心选择的数据结构可以带来更高的运行或者存储效率

栈数据结构的执行特点：
        后进先出，先进后出
        数据进入栈模型的过程称为:压/进栈
        数据离开栈模型的过程称为:弹/出栈

队列数据结构的执行特点：
        先进先出，后进后出
        数据从后端进入队列模型的过程称为:入队列
        数据从前端离开队列模型的过程称为:出队列

数组：
        查询速度快∶查询数据通过地址值和索引定位，查询任意数据耗时相同。(元素在内存中是连续存储的)
        删除效率低:要将原始数据删除，同时后面每个数据前移。
        添加效率极低:添加位置后的每个数据后移，再添加元素。
        数组是一种查询快，增删慢的模型

链表：
        链表中的元素是在内存中不连续存储的，每个元素节点包含数据值和下一个元素的地址。
        链表中的元素是游离存储的，每个元素节点包含数据值和下一个元素的地址。
        链表查询慢。无论查询哪个数据都要从头开始找
        链表增删相对快

二叉树：
        只能有一个根节点：每个节点最多支持2个直接子节点。
        节点的度：节点拥有的子树的个数，二叉树的度不大于2叶子节点度为o的节点，也称之为终端结点。
        高度：叶子结点的高度为1，叶子结点的父节点高度为2，以此类推，根节点的高度最高。
        层：根节点在第一层，以此类推
        兄弟节点：拥有共同父节点的节点互称为兄弟节点

二叉查找树：
        每一个节点上最多有两个子节点
        左子树上所有节点的值都小于根节点的值
        右子树上所有节点的值都大于根节点的值
        目的:提高检索数据的性能。

二叉平衡树：
        平衡二叉树是在满足查找二叉树的大小规则下，让树尽可能矮小，以此提高查数据的性能。
        任意节点的左右两个子树的高度差不超过1，任意节点的左右两个子树都是一颗平衡二叉树

平衡二叉树在添加元素后可能导致不平衡：
        基本策略是进行左旋，或者右旋保证平衡。


红黑树：
        红黑树是一种自平衡的二叉查找树，是计算机科学中用到的一种数据结构。
        每一个节点可以是红或者黑;红黑树不是通过高度平衡的，它的平衡是通过“红黑规则”进行实现的。

红黑规则：
        每一个节点或是红色的，或者是黑色的，根节点必须是黑色。
        如果一个节点没有子节点或者父节点，则该节点相应的指针属性值为Nil，这些Nil视为叶节点，叶节点是黑色的。
        如果某一个节点是红色，那么它的子节点必须是黑色(不能出现两个红色节点相连的情况)。
        对每一个节点，从该节点到其所有后代叶节点的简单路径上，均包含相同数目的黑色节点。

添加节点：
        添加的节点的颜色，可以是红色的，也可以是黑色的。
        默认用红色效率高。

过程：
        将父节点设为黑色
        将叔叔节点设为黑色，将祖父节点设为红色。
        如果祖父节点为根节点，则将根节点再次变成黑色。

红黑树增删改查的性能都很好
